// skipped
// TODO: together with timetotwo2, this is a nice test case for an equivalence checker
// what is the expected number of samples until a value between 0 and N-1 is sampled for the second time?


def main(){
    N:=3;
    arr:=array(N,0);
    time:=-1;
    for i in [0..N]{
        k := uniformInt(0,2); // TODO: N-1
        // if(time ==-1 && a[k]){ time=i+1; } // TODO!
        if(time == -1){
            for j in [0..N){
                if(k==j){
                    if(arr[j]){
                        time=i+1;
                    }
                    arr[j]=1;
                }
            }
        }
    }
    assert(time != -1);
    a := Expectation(time==1);
    b := Expectation(time==2);
    c := Expectation(time==3);
    d := Expectation(time==4);
    e := Expectation(time);
    k := 1*a+2*b+3*c+4*d;
    assert(k == e);
    return (a,b,c,d,e); // expected: δ[-b+⅟3]·δ[-c+4/9]·δ[-d+2/9]·δ[-e+26/9]·δ[a]
}
