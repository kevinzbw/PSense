
def main(){
	a := [1,2,3,4,5,6];
	b := a[1..3];
	assert(b[0]==2 && b[1]==3);
	x := (1,2,3,4,5,6);
	y := x[1..3];
	assert(y[0]==2&&y[1]==3);
	l := uniformInt(0,a.length);
	r := uniformInt(l,a.length);
	assert(0<=l&&l<=r&&r<=a.length);
	return a[l..r].length; // expected: ((1/14·δ[-length+1]+1/14·δ[length])·[-1+length≤0]·[-⌊5+length⌋+5+length=0]+(1/21·δ[-length+1]+1/21·δ[-length+2]+1/21·δ[length])·[-2+length≤0]·[-⌊4+length⌋+4+length=0]+(1/28·δ[-length+1]+1/28·δ[-length+2]+1/28·δ[-length+3]+1/28·δ[length])·[-3+length≤0]·[-⌊3+length⌋+3+length=0]+(1/35·δ[-length+1]+1/35·δ[-length+2]+1/35·δ[-length+3]+1/35·δ[-length+4]+1/35·δ[length])·[-4+length≤0]·[-⌊2+length⌋+2+length=0]+(1/42·δ[-length+1]+1/42·δ[-length+2]+1/42·δ[-length+3]+1/42·δ[-length+4]+1/42·δ[-length+5]+1/42·δ[length])·[-5+length≤0]·[-⌊1+length⌋+1+length=0]+(1/49·δ[-length+1]+1/49·δ[-length+2]+1/49·δ[-length+3]+1/49·δ[-length+4]+1/49·δ[-length+5]+1/49·δ[-length+6]+1/49·δ[length])·[-6+length≤0]·[-⌊length⌋+length=0]+1/7·δ[length])·[-length≤0]
	// TODO: completely eliminate bounds checks in the result
}
