
def Dirac[a](x:a):Distribution[a]{ // TODO: make built-in
	return infer(()=>x);
}

def main(){
	k := if flip(1/2) { infer } else { [a](f:𝟙 → a)=>Dirac(f()) };
	return k(()=>flip(1/2)); // expected: 1/2·δ_r₁[λξ₁. 1/2·δ_ξ₁[val(0)]+1/2·δ_ξ₁[val(1)]]+1/4·δ_r₁[λξ₁. δ_ξ₁[val(0)]]+1/4·δ_r₁[λξ₁. δ_ξ₁[val(1)]]
}
