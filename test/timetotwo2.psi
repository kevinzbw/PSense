// skipped
// what is the expected number of samples until a value between 0 and N-1 is sampled for the second time?
// alternative formulation

def main(){
    N:=3;
    arr:=array(N+1,0);
    time:=-1;
    for i in [0..N]{
        arr[i] = uniformInt(0,N-1); // TODO: N-1
        if(time == -1){
            for j in [0..i){
                if arr[j] == arr[i]{
                    time=i+1;
                }
            }   
        }
    }
    assert(time != -1);
    a := Expectation(time==1);
    b := Expectation(time==2);
    c := Expectation(time==3);
    d := Expectation(time==4);
    e := Expectation(time);
    k := 1*a+2*b+3*c+4*d;
    assert(k == e);
    assert(time>1);
    return (a,b,c,d,e); // expected: δ[-b+⅟3]·δ[-c+4/9]·δ[-d+2/9]·δ[-e+26/9]·δ[a]
}
