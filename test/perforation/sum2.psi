// skipped
// TODO: too slow

def main(){
    s := 0;
    sis := 0;
    n := 6;
    skip:=2;
    m := n/skip;

    xs := array(n);

    for i in [0..n) {
        //xs[i] = Gauss(0,1); //Gauss(0,3) fail, Gauss(0,a) fail
        xs[i] = uniform(0,1);
        //for uniform(0,1) produces correct expectation/variance
        //slow for Beta and Gamma distributions 
    }


    for i in [0..n) {
        s = s + xs[i];
    }

    for i in [0..m) {
        sis = sis + xs[skip*i];
    }
    sis = sis * skip; // this works (but is true only for even n)
    //observe(m > 0);
    //sis = sis * n * (n-m)/m;

    res := (sis - s);
    if res < 0 { res = 0 - res; } // Caused Psy to crash once (TODO: figure this out.)
    //return res;
    return Expectation(res); // fail, assertion error
    //return Expectation(res^2 - (Expectation(res))^2);
}
