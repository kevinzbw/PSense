// skipped
// TODO: too slow

def main(){
    min := 1000000000000000000;
    mins := 0;
    n := 4;
    k := 2;
    skip:=2;
    m := n/skip;

    xs := array(n*k);

    for i in [0..n*k) {
        xs[i] = gauss(0,1); //gauss(0,3) fail, gauss(0,a) fail
        //for uniform(0,1) produces correct expectation/variance
        //slow for beta and gamma distributions 
    }

    for j in [0..k) {
        s := 0;
        for i in [0..n) {
            s = s + xs[j*n + i];
        }
        if s < min { min = s; }
    }

    for j in [0..k) {
        sis := 0;
        for i in [0..m) {
            sis = sis + xs[j*n + skip*i];
        }
        sis = sis * skip;
        if sis < mins { mins = sis; }
    }

    res := (min - mins);
    //if res < 0 { res = 0 - res; }  // Caused Psi to crash once (TODO: figure this out.)
    return res;
    //return Expectation(res);
    //return Expectation(res^2 - (Expectation(res))^2);
}
