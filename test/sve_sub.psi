def maink(){
    dd := uniform(0,1)+uniform(0,1);
    r := uniform(0,1) + gauss(dd,1);// + Gauss(10,1);
    //r := Gauss(dd,1);
    return r; // expected: ((d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅)·3/2·e^(1/2·r²)·r²+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅)·3·e^(1/2·r²)+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅+√2̅)·1/2·e^(1/2·r²)·r²+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅+√2̅)·5·e^(1/2·r²)+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+√2̅)·6·e^(1/2·r²)·r+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅)·e^(1/2·r²)·1/2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅)·e^(1/2·r²)·r²·1/2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅)·e^(1/2·r²)·r·3+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅+√2̅)·e^(1/2·r²)·r·3+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+√2̅)·e^(1/2·r²)·15/2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+√2̅)·e^(1/2·r²)·r²·3/2+-2^(3/2)·e^(-2+2·r)+-e^(-1/2+r)·r·√2̅+-e^(-1/2+r)·⅟√2̅+-e^(-2+2·r)·r·⅟2^(3/2)+-e^(-2+2·r)·⅟√2̅+-e^(-9/2+3·r)·r·⅟√2̅+-e^(-9/2+3·r)·⅟2^(3/2)+-r·⅟2^(3/2)+e^(-1/2+r)·r·⅟2^(3/2)+e^(-1/2+r)·⅟2^(3/2)+e^(-1/2+r)·√2̅+e^(-2+2·r)·r·√2̅+e^(-2+2·r)·√2̅+e^(-9/2+3·r)·r·⅟2^(3/2)+e^(-9/2+3·r)·√2̅+r·⅟√2̅)·⅟e^(1/2·r²)·⅟√π̅
    // TODO: evaluate normalization constant (need to evaluate the limit more quickly)
}
