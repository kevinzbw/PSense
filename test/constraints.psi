def main(){
    x := gauss(0,1);
    if (x-3)*(x-2) <= 0{
        x = 0;
    }
    // observe((x-3)*(x-2)<=0); // (impossible observation)
    observe((x-3)*(x-2)==6);
    return x; // expected: (((d/dx)⁻¹[e^(-x²)](3·⅟√2̅)·[(d/dx)⁻¹[e^(-x²)](3·⅟√2̅)·⅟√π̅+-(d/dx)⁻¹[e^(-x²)](√2̅)·⅟√π̅≠0]·⅟((d/dx)⁻¹[e^(-x²)](3·⅟√2̅)·⅟√π̅+-(d/dx)⁻¹[e^(-x²)](√2̅)·⅟√π̅)·⅟√π̅+-(d/dx)⁻¹[e^(-x²)](√2̅)·[(d/dx)⁻¹[e^(-x²)](3·⅟√2̅)·⅟√π̅+-(d/dx)⁻¹[e^(-x²)](√2̅)·⅟√π̅≠0]·⅟((d/dx)⁻¹[e^(-x²)](3·⅟√2̅)·⅟√π̅+-(d/dx)⁻¹[e^(-x²)](√2̅)·⅟√π̅)·⅟√π̅)·δ[x]+[(d/dx)⁻¹[e^(-x²)](3·⅟√2̅)·⅟√π̅+-(d/dx)⁻¹[e^(-x²)](√2̅)·⅟√π̅≠0]·[-5·x+6+x²≠0]·[-6+-x²+5·x≤0]·⅟((d/dx)⁻¹[e^(-x²)](3·⅟√2̅)·⅟√π̅+-(d/dx)⁻¹[e^(-x²)](√2̅)·⅟√π̅)·⅟e^(1/2·x²)·⅟√2̅·⅟√π̅)·[-x²+5·x=0]

    // TODO: prove that probability of error is zero
    // TODO: this should be simply δ[x]
}
