//skipped

def dieToProbs(die){
        if(die == 0) {return [0, 0.2, 0.8];}
        else if(die == 1) {return [0.1, 0.3, 0.6];}
        else {return [0.1,0.2,0.7];}
}

sidePrior_ps := [1/3,1/3,1/3];
diePrior_ps := [1/2, 1/2];

def roll(die){
        return categorical(dieToProbs(die));
}

def teacher3(die){
        side := categorical(sidePrior_ps);
        observe(sample(Marginal(learner3(side))) == die);
        return side;
}

def learner3(side){
        die := categorical(diePrior_ps);
        observe(sample(Marginal(teacher2(die))) == side);
        return die;
}

def teacher2(die){
        side := categorical(sidePrior_ps);
        observe(sample(Marginal(learner2(side))) == die);
        return side;
}

def learner2(side){
        die := categorical(diePrior_ps);
        observe(sample(Marginal(teacher1(die))) == side);
        return die;
}

def teacher1(die){
        side := categorical(sidePrior_ps);
        observe(sample(Marginal(learner1(side))) == die);
        return side;
}

def learner1(side){
        die := categorical(diePrior_ps);
        observe(roll(die) == side);
        return die;
}

def main(){
        return teacher1(1); //expected: 1/20·δ[r₁]+1/4·δ[-r₁+1]+7/10·δ[-r₁+2]
        //0 for red, 1 for green, 2 for blue
}
