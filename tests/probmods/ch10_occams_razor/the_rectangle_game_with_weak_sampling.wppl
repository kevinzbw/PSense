var observedData = [{x: 0.40, y: 0.70, polarity: '+ '},{x: 0.50, y: 0.40, polarity: '+ '},
                    {x: 0.46, y: 0.63, polarity: '+ '},{x: 0.43, y: 0.51, polarity: '+ '}]

var post = Infer(
  {method: 'MCMC', samples: 150, lag: 100, burn: 100},
  function () {
    var x1 = uniform(0, 1), x2 = uniform(0, 1)
    var y1 = uniform(0, 1), y2 = uniform(0, 1)

    //  the concept is now a rule for classifying points as in or out of this rectangle
    var classifier = function(x,y) {
     return (x > x1 && x < x2 && y > y1 && y < y2) ? '+ ' : '-';
    }

    mapData({data: observedData},function(example) {
      condition(classifier(example.x, example.y) == example.polarity)
    });

    return {x1: x1, x2: x2, y1: y1, y2: y2};
  }
)

var img = Draw(500, 500, true);

//  draw rectangles
map(function(r) {
  var r = r.value
  img.rectangle(r.x1 * 500, r.y1 * 500, r.x2 * 500, r.y2 * 500, '#99ccff', '#99ccff', 0.01)
}, post.samples)

//  draw data points
map(function(obs) {
  img.circle(obs.x * 500, obs.y * 500, 5, 'black', 'black')
}, observedData)
