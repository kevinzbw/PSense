//skipped: does not match WebPPL result

def allSprouted(state){return state == 3;}
def somdeSprouted(state){return state > 0;}
def noneSprouted(state){return state == 0;}
def meaning(words, state){
        if(words == 0){return allSprouted(state);}
        else if(words == 1){return somdeSprouted(state);}
        else if(words == 2){return noneSprouted(state);}
        else {assert(0);}
}

statePrior_ps := [1/4,1/4,1/4,1/4];
sentencePrior_ps := [1/3,1/3,1/3];

def speaker1(state){
        words := categorical(sentencePrior_ps);
        observe(state == sample(Marginal(listener1(words))));
        return words;
}

def listener1(words){
        state := categorical(statePrior_ps);
        wordsMeaning := meaning(words, state);
        observe(words == sample(Marginal(speaker0(state))));
        return state;
}

def speaker0(state){
        words := categorical(sentencePrior_ps);
        observe(state == sample(Marginal(listener0(words))));
        return words;
}

def listener0(words){
        state := categorical(statePrior_ps);
        wordsMeaning := meaning(words, state);
        observe(wordsMeaning);
        return state;
}

def main(){
        return speaker1(3);
}
