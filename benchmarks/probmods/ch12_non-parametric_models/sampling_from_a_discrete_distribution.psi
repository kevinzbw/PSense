def residuals(probs:R[]){
        result := ([]:R[]);
        rest_probs := 1;
        for i in [0..4){
                result = result~[(probs[i]/ rest_probs)];
                rest_probs -= probs[i];
        }
        return result;
}

def mySampleDiscrete(resid: R[]){
        result := 0;
        break := 0;
        for i in [0..4){
                if(bernoulli(resid[i])){break = 1;}
                if(!break){result = result +  1;}
        }
        return result;
}

def main(){
        return mySampleDiscrete(residuals([0.2,0.3,0.1,0.4])); //expected: 1/10·δ[-r₁+2]+1/5·δ[r₁]+2/5·δ[-r₁+3]+3/10·δ[-r₁+1]
}
